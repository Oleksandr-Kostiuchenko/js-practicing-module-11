{"version":3,"file":"task-1.js","sources":["../src/js/task-1.js"],"sourcesContent":["//TODO: Отримання списку постів (GET)\n//? Напиши функцію getPosts(), яка отримує список постів із https://jsonplaceholder.typicode.com/posts і виводить їх у консоль.\n//? Відобрази заголовки постів у списку на сторінці.\n//? Оброби помилку (catch), якщо сервер недоступний.\n\n//* Find elements\nconst postsContainer = document.querySelector('.posts-container');\nconst getPostBtn = document.querySelector('.get-post-btn');\nconst postContainer = document.querySelector('.post-container');\n\n//* Add event listener & function\nconst onGetPostClick = event => {\n    fetch('https://jsonplaceholder.typicode.com/posts')\n        .then(response => {\n            if (!response.ok) {\n                throw new Error(response.status);\n            }\n\n            return response.json();\n        }\n    ).then(postData => {\n        const postsHTML = [];\n        console.log(postData);\n\n        postData.forEach(post => {\n            postsHTML.push(`\n            <div class=\"post-container\">\n                <h2 class=\"post-title\">${post.title}</h2>\n                <p class=\"post-content\">${post.body}</p>\n                <p class=\"post-id\">POST ID:${post.id}</p>\n            </div>`\n            );\n        });\n\n        postsContainer.insertAdjacentHTML('beforeend', postsHTML.join(''));\n    })\n    .catch(err => {\n        console.log(err);\n    })\n}\n\ngetPostBtn.addEventListener('click', onGetPostClick);\n\n//TODO: Отримання інформації про пост за ID (GET)\n//? Створи функцію getUser(id), яка приймає id і виконує запит на https://jsonplaceholder.typicode.com/users/{id}.\n//? Відобрази ім'я та email користувача в консоль.\n//? Якщо користувача немає (404), виведи повідомлення \"Користувача не знайдено\".\n\nconst getUser = id => {\n    fetch(`https://jsonplaceholder.typicode.com/users/${id}`)\n        .then(response => {\n            if (!response.ok) {\n                throw new Error(response.status);\n            }\n\n            return response.json();\n        }\n        )\n        .then(postData => {\n            console.log(postData.name);\n            console.log(postData.email);\n        })\n        .catch(err => {\n            console.log('Користувача не знайдено')\n        });\n}\n\ngetUser(1);"],"names":["postsContainer","getPostBtn","onGetPostClick","event","response","postData","postsHTML","post","err","getUser","id"],"mappings":"0uBAMA,MAAMA,EAAiB,SAAS,cAAc,kBAAkB,EAC1DC,EAAa,SAAS,cAAc,eAAe,EACnC,SAAS,cAAc,iBAAiB,EAG9D,MAAMC,EAAiBC,GAAS,CAC5B,MAAM,4CAA4C,EAC7C,KAAKC,GAAY,CACd,GAAI,CAACA,EAAS,GACV,MAAM,IAAI,MAAMA,EAAS,MAAM,EAGnC,OAAOA,EAAS,MACnB,CACT,EAAM,KAAKC,GAAY,CACf,MAAMC,EAAY,CAAA,EAClB,QAAQ,IAAID,CAAQ,EAEpBA,EAAS,QAAQE,GAAQ,CACrBD,EAAU,KAAK;AAAA;AAAA,yCAEcC,EAAK,KAAK;AAAA,0CACTA,EAAK,IAAI;AAAA,6CACNA,EAAK,EAAE;AAAA,mBAEpD,CACA,CAAS,EAEDP,EAAe,mBAAmB,YAAaM,EAAU,KAAK,EAAE,CAAC,CACzE,CAAK,EACA,MAAME,GAAO,CACV,QAAQ,IAAIA,CAAG,CACvB,CAAK,CACL,EAEAP,EAAW,iBAAiB,QAASC,CAAc,EAOnD,MAAMO,EAAUC,GAAM,CAClB,MAAM,8CAA8CA,CAAE,EAAE,EACnD,KAAKN,GAAY,CACd,GAAI,CAACA,EAAS,GACV,MAAM,IAAI,MAAMA,EAAS,MAAM,EAGnC,OAAOA,EAAS,MACnB,CACA,EACA,KAAKC,GAAY,CACd,QAAQ,IAAIA,EAAS,IAAI,EACzB,QAAQ,IAAIA,EAAS,KAAK,CACtC,CAAS,EACA,MAAMG,GAAO,CACV,QAAQ,IAAI,yBAAyB,CACjD,CAAS,CACT,EAEAC,EAAQ,CAAC"}