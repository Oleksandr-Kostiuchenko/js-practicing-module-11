/* empty css                      */import{i as d}from"./assets/vendor-I1I71QQ2.js";(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))u(o);new MutationObserver(o=>{for(const r of o)if(r.type==="childList")for(const i of r.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&u(i)}).observe(document,{childList:!0,subtree:!0});function t(o){const r={};return o.integrity&&(r.integrity=o.integrity),o.referrerPolicy&&(r.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?r.credentials="include":o.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function u(o){if(o.ep)return;o.ep=!0;const r=t(o);fetch(o.href,r)}})();const p=document.querySelector(".posts-container"),f=document.querySelector(".get-post-btn");document.querySelector(".post-container");const c=document.querySelector(".user-id-input"),m=document.querySelector(".get-info-btn"),l=document.querySelector(".post-title-input"),a=document.querySelector(".post-content-input"),h=document.querySelector(".create-btn");let s=[];const y=n=>{fetch("https://jsonplaceholder.typicode.com/posts").then(e=>{if(!e.ok)throw new Error(e.status);return e.json()}).then(e=>{s=[],console.log(e),e.forEach(t=>{s.push(`
            <div class="post-container">
                <h2 class="post-title">${t.title}</h2>
                <p class="post-content">${t.body}</p>
                <p class="post-id">POST ID:${t.id}</p>
            </div>`)}),p.insertAdjacentHTML("beforeend",s.join(""))}).catch(e=>{console.log(e)})};f.addEventListener("click",y);const g=async n=>{try{const e=await fetch(`https://jsonplaceholder.typicode.com/users/${n}`);if(!e.ok)throw new Error(e.status);const t=await e.json();return{name:t.name,email:t.email}}catch(e){console.log(e)}};m.addEventListener("click",async n=>{if(c.value.trim()!==""){try{const e=await g(c.value);d.info({timeout:7e3,overlay:!0,title:"User Info:",titleSize:"55",message:`Name: ${e.name} | Email: ${e.email}`,messageSize:"50",position:"center",drag:!1}),c.value=""}catch{d.error({timeout:2e3,overlay:!0,title:"Error",titleSize:"55",message:"User is not found!",messageSize:"50",position:"center",drag:!1})}c.value=""}});const v=n=>{const e={method:"POST",body:JSON.stringify(n),headers:{"content-type":"application/json"}};return fetch("https://jsonplaceholder.typicode.com/posts",e).then(t=>{if(!t.ok)throw new Error(t.status);return t.json()}).then(t=>{s.push(`
            <div class="post-container">
                <h2 class="post-title">${t.title}</h2>
                <p class="post-content">${t.body}</p>
                <p class="post-id">POST ID:${t.id}</p>
            </div>
            `),p.insertAdjacentHTML("beforeend",s[s.length-1])})};h.addEventListener("click",n=>{l.value.trim()===""||a.value.trim()===""||v({title:`${l.value}`,body:`${a.value}`}).then(e=>{console.log(e),l.value="",a.value=""})});
//# sourceMappingURL=task-1.js.map
